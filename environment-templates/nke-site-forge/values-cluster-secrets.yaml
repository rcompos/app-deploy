# Default values for cluster-secrets.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  externalSecrets:
    # -- refreshInterval is the amount of time before reading values again from the SecretStore provider (vault)
    refreshInterval: "1h"
    # -- specifies the ExternalSecret ownership details in the created Secret. Read more in docs - https://external-secrets.io/v0.10.3/api/externalsecret/
    creationPolicy: Orphan

secretStores:
  - name: vault-ngc
    namespace: kubernetes-replicator
    vaultServer: "https://prod.vault.nvidia.com:443"
    vaultNamespace: "ngc"
    vaultAuth:
      jwt:
        path: "kube/nkek8s/${ENV_NAME}"
        role: "kubernetes-replicator-eso-vault-auth"
        k8sServiceAccount:
          name: "eso-vault-auth"
          create: true 
  - name: vault-ngc
    namespace: forge-workflow-engine
    vaultServer: "https://prod.vault.nvidia.com:443"
    vaultNamespace: "ngc"
    vaultAuth:
      jwt:
        path: "kube/nkek8s/${ENV_NAME}"
        role: "forge-workflow-engine-eso-vault-auth"
        k8sServiceAccount:
          name: "eso-vault-auth"
          create: true 
  - name: vault-ngc
    namespace: site-workflow-engine
    vaultServer: "https://prod.vault.nvidia.com:443"
    vaultNamespace: "ngc"
    vaultAuth:
      jwt:
        path: "kube/nkek8s/${ENV_NAME}"
        role: "site-workflow-engine-eso-vault-auth"
        k8sServiceAccount:
          name: "eso-vault-auth"
          create: true 
  - name: vault-ngc
    namespace: argocd
    vaultServer: "https://prod.vault.nvidia.com:443"
    vaultNamespace: "ngc"
    vaultAuth:
      jwt:
        path: "kube/nkek8s/${ENV_NAME}"
        role: "argocd-eso-vault-auth"
        k8sServiceAccount:
          name: "eso-vault-auth"
          create: true 
  - name: vault-ngc
    namespace: cloud-workflow-engine
    vaultServer: "https://prod.vault.nvidia.com:443"
    vaultNamespace: "ngc"
    vaultAuth:
      jwt:
        path: "kube/nkek8s/${ENV_NAME}"
        role: "cloud-workflow-engine-eso-vault-auth"
        k8sServiceAccount:
          name: "eso-vault-auth"
          create: true 

externalSecrets:
  # imagepull secret
  - name: ngc-registry-nke-imagepull 
    namespace: kubernetes-replicator
    secretType: kubernetes.io/dockerconfigjson
    annotations:
      replicator.v1.mittwald.de/replicate-to: "cloud-workflow-engine,site-workflow-engine,forge-workflow-engine,kubetrust-verifier,kubetrust,nvault-k8s,monitoring"
    secretStoreRef:
      name: vault-ngc
    dataTemplate:
      .dockerconfigjson: '{"auths":{"nvcr.io":{"username":"$oauthtoken","password":"{{ .apikey }}","auth":"{{ printf "$oauthtoken:%s" .apikey | b64enc }}"}}}'
    data:
      - key: apikey
        vaultPath: secrets/groups/nkek8s/sites/${ENV_NAME}/kubernetes-replicator/ngc-registry-nke-readonly 
        vaultKey: apikey
        decodingStrategy: None 
  
   # argocd helm private repo secret
  - name: repo-helm-ngc-j7sbcjl3qgta
    namespace: argocd
    labels:
      argocd.argoproj.io/secret-type: repository
    secretStoreRef:
      name: vault-ngc
    dataTemplate:
      name: j7sbcjl3qgta
      url: https://helm.ngc.nvidia.com/j7sbcjl3qgta
      type: helm
      username: $oauthtoken
      password: '{{ .apikey }}' 
    data:
      - key: apikey
        vaultPath: secrets/groups/nkek8s/sites/${ENV_NAME}/argocd/ngc-registry-nke-readonly
        vaultKey: apikey
        decodingStrategy: None
  
  # argo gitlab repo secret
  - name: repo-gitlab-nke-site-deploy # format - repo-<repo-type>-<repo-name>
    namespace: argocd
    labels:
      argocd.argoproj.io/secret-type: repository
    secretStoreRef:
      name: vault-ngc
    dataTemplate:
      type: git
      url: https://gitlab.com/nvidia/nvcloud/gitlab_nke-site-deploy.git
      username: nke-read-only
      password: '{{ .token }}' 
    data:
      - key: token
        vaultPath: secrets/groups/nkek8s/sites/${ENV_NAME}/argocd/gitlabcom-repo-nke-site-deploy-readonly # vault path
        vaultKey: token # name of the key at above path
        decodingStrategy: None # can be None, Base64, Base64URL or Auto. Ref -  https://external-secrets.io/latest/guides/decoding-strategy/
  
  # argo gitlab repo secret
  - name: repo-gitlab-nke-cloud-deploy # format - repo-<repo-type>-<repo-name>
    namespace: argocd
    labels:
      argocd.argoproj.io/secret-type: repository
    secretStoreRef:
      name: vault-ngc
    dataTemplate:
      type: git
      url: https://gitlab.com/nvidia/nvcloud/gitlab_nke-cloud-deploy.git
      username: nke-read-only
      password: '{{ .token }}' 
    data:
      - key: token
        vaultPath: secrets/groups/nkek8s/sites/${ENV_NAME}/argocd/gitlabcom-repo-nke-cloud-deploy-readonly # vault path
        vaultKey: token # name of the key at above path
        decodingStrategy: None # can be None, Base64, Base64URL or Auto. Ref -  https://external-secrets.io/latest/guides/decoding-strategy/

  # forge creds for CWE
  - name: cloud-workflow-engine-forge-creds
    namespace: cloud-workflow-engine
    secretStoreRef:
      name: vault-ngc
    dataTemplate:
      forge-api-key: '{{ .apikey }}' 
      user: '{{ .user }}' 
    data:
      - key: apikey
        vaultPath: secrets/groups/nkek8s/sites/${ENV_NAME}/cloud-workflow-engine/ngc-forge-apikey
        vaultKey: apikey # name of the key at above path
        decodingStrategy: None
      - key: user
        vaultPath: secrets/groups/nkek8s/sites/${ENV_NAME}/cloud-workflow-engine/ngc-forge-apikey
        vaultKey: user # name of the key at above path
        decodingStrategy: None

k8sSecrets: []

