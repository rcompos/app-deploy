#!/usr/bin/env bash
set -x

CLUSTER_NAME=$1
REPO_NAME=$2
REPO_URL=$3
ARGOCD_REPO_CREDS=$4
CNPG_BOOTSTRAP_SECRETS=$5
NGC_NKE_SVC_TOKEN_FILE=$6
NGC_NKE_SVC_TOKEN=`cat "$NGC_NKE_SVC_TOKEN_FILE"`

CLUSTER_DIR="cluster-${CLUSTER_NAME}"
cd "$CLUSTER_DIR"

export KUBECONFIG="${PWD}/${CLUSTER_NAME}.kubeconfig"

# Change to git repo dir
cd "${REPO_NAME}"

# Create ArgoCD repo creds
# pwd
kubectl create ns argocd
# kubectl -n argocd apply -f ../../argo-repo-creds.yaml
kubectl -n argocd apply -f "$ARGOCD_REPO_CREDS"
# argocd repo list

# Image pull secret
kubectl create ns kubernetes-replicator
# kubectl create secret -n kubernetes-replicator docker-registry svc-nke-ngc-imagepull --docker-server=nvcr.io --docker-username=\$oauthtoken --docker-password=<apikey> --docker-email=svc-nke-ngc-ro@nvidia.com
kubectl create secret -n kubernetes-replicator docker-registry svc-nke-ngc-imagepull --docker-server=nvcr.io --docker-username=\$oauthtoken --docker-password="$NGC_NKE_SVC_TOKEN" --docker-email=svc-nke-ngc-ro@nvidia.com
kubectl -n kubernetes-replicator annotate --overwrite secret svc-nke-ngc-imagepull replicator.v1.mittwald.de/replicate-to='site-workflow-engine,forge-workflow-engine,kubetrust-verifier,nvault-k8s'

# Create Cloudnative-Postgres bootstrap secrets
kubectl create ns cnpg-cloud
kubectl create ns cnpg-site
kubectl create ns cnpg-temporal
# pwd
# kubectl apply -f ../../cnpg-bootstrap-secrets.yaml
kubectl apply -f $CNPG_BOOTSTRAP_SECRETS

# Label storage nodes
kubectl label nodes "${CLUSTER_NAME}-worker" nke.nvidia.com/storage-node=1
kubectl label nodes "${CLUSTER_NAME}-worker2" nke.nvidia.com/storage-node=2
kubectl label nodes "${CLUSTER_NAME}-worker3" nke.nvidia.com/storage-node=3
kubectl get nodes --show-labels